{"name":"Freeling::Analyzer","tagline":"A Ruby wrapper for FreeLing's analyzer tool","body":"# Freeling::Analyzer\r\n\r\n**FreeLing::Analyzer** is a Ruby wrapper around `analyzer`, a binary tool\r\nincluded in FreeLing's package that allows the user to process a stream of text\r\nwith FreeLing.\r\n\r\n*This has been tested with version 3.0+ only*.\r\n\r\n## Usage\r\n\r\n```ruby\r\ntext = \"Mi amigo Juan Mesa se mesa la barba al lado de la mesa.\"\r\nanalyzer = FreeLing::Analyzer.new(text, :language => :es)\r\n\r\nanalyzer.tokens.first\r\n# => #<FreeLing::Analyzer::Token form=\"Mi\" lemma=\"mi\" prob=0.995536 tag=\"DP1CSS\">\r\n\r\nanalyzer.tokens.map { |t| t.lemma }\r\n# => [\"mi\", \"amigo\", \"juan_mesa\", \"se\", \"mesar\", \"el\", \"barba\", \"a+el\", \"lado\", \"de\", \"el\", \"mesa\", \".\"]\r\n```\r\n\r\n## Features\r\n\r\n* Analyzer is *lazy*, it does not spawn the process until needed and it sends\r\n  the input text to `analyzer` on demand.\r\n* It just works with the default instalation of FreeLing. Just set the language\r\n  to use and you're good to go.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'freeling-analyzer'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install freeling-analyzer\r\n\r\n## FreeLing\r\n\r\n[FreeLing](http://nlp.lsi.upc.edu/freeling/) is an open source suite of\r\nlanguage analyzers written in C++.\r\n\r\nThe main services offered are:\r\n  * Text tokenization\r\n  * Sentence splitting\r\n  * Morphological analysis\r\n  * Suffix treatment\r\n  * Retokenization of clitic pronouns\r\n  * Flexible multiword recognition\r\n  * Contraction splitting\r\n  * Probabilistic prediction of unkown word categories\r\n  * Named entity detection (NER)\r\n  * Recognition of dates, numbers, ratios, currency, and physical magnitudes\r\n    (speed, weight, temperature, density, etc.)\r\n  * PoS tagging\r\n  * Chart-based shallow parsing\r\n  * Named entity classification (NEC)\r\n  * WordNet based sense annotation and disambiguation\r\n  * Rule-based dependency parsing\r\n  * Nominal correference resolution.\r\n\r\nCurrently supported languages are:\r\n  * Spanish\r\n  * Catalan\r\n  * Galician\r\n  * Italian\r\n  * English\r\n  * Welsh\r\n  * Portuguese\r\n  * Asturian\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}